from aiogram.types import KeyboardButton
from aiogram.utils.keyboard import ReplyKeyboardMarkup, ReplyKeyboardBuilder
from aiogram.utils.keyboard import InlineKeyboardBuilder, InlineKeyboardButton, InlineKeyboardMarkup


# ====================
# –û–±—â–∏–µ –∫–ª–∞–≤–∏–∞—Ç—É—Ä—ã
# ====================


async def main_menu(admin=False):
    keys = ReplyKeyboardBuilder()
    keys.add(KeyboardButton(text='üç≤ –°–ª—É—á–∞–π–Ω—ã–π —Ä–µ—Ü–µ–ø—Ç'))
    keys.add(KeyboardButton(text='üìñ –ö–∞—Ç–µ–≥–æ—Ä–∏–∏'))
    if admin:
        keys.add(KeyboardButton(text='‚öô –ê–¥–º–∏–Ω –ø–∞–Ω–µ–ª—å'))
    keys.adjust(1)
    return keys.as_markup(resize_keyboard=True)


categories = ReplyKeyboardMarkup(keyboard=[
    [KeyboardButton(text='ü•ó –°–∞–ª–∞—Ç—ã')],
    [KeyboardButton(text='üçñ –ú—è—Å–Ω—ã–µ –±–ª—é–¥–∞')],
    [KeyboardButton(text='üç∞ –î–µ—Å–µ—Ä—Ç—ã')],
    [KeyboardButton(text='‚¨Ö –ù–∞–∑–∞–¥')]
], resize_keyboard=True)

recipe_choice = InlineKeyboardMarkup(inline_keyboard=[
    [InlineKeyboardButton(text='–ì–æ—Ç–æ–≤—ã–π —Ä–µ—Ü–µ–ø—Ç', callback_data='ready_recipe')],
    [InlineKeyboardButton(text='–í–≤–µ—Å—Ç–∏ –∏–º–µ—é—â–∏–µ—Å—è –ø—Ä–æ–¥—É–∫—Ç—ã', callback_data='input')]
])


async def sub_keys(channel_url):
    keys = InlineKeyboardBuilder()
    keys.button(text='–ü–æ–¥–ø–∏—Å–∞—Ç—å—Å—è', url=channel_url)
    keys.button(text='–ü—Ä–æ–≤–µ—Ä–∏—Ç—å', callback_data='start')
    keys.adjust(1)
    return keys.as_markup()


# ====================
# –î–ª—è –∞–¥–º–∏–Ω–æ–≤
# ====================


admin_menu = ReplyKeyboardMarkup(keyboard=[
    [KeyboardButton(text='–°—Å—ã–ª–∫–∏ –Ω–∞ –∏—Å—Ç–æ—á–Ω–∏–∫–∏')],
    [KeyboardButton(text='–°–≤–æ–∏ —Ä–µ—Ü–µ–ø—Ç—ã')],
], resize_keyboard=True)

link_action = InlineKeyboardMarkup(inline_keyboard=[
    [InlineKeyboardButton(text='‚ûï –î–æ–±–∞–≤–∏—Ç—å —Å—Å—ã–ª–∫—É', callback_data='link_add')],
    [InlineKeyboardButton(text='üóë –£–¥–∞–ª–∏—Ç—å —Å—Å—ã–ª–∫—É', callback_data='link_remove')]
])

confirm = InlineKeyboardMarkup(inline_keyboard=[
    [InlineKeyboardButton(text='‚úÖ –î–∞', callback_data='yes')],
    [InlineKeyboardButton(text='üö´ –ù–µ—Ç', callback_data='no')]
])


async def recipe_list_keyboard(recipe_list: list):
    keys = InlineKeyboardBuilder()
    for r in recipe_list:
        keys.button(text=r['recipe_name'], callback_data=f'get_{r["recipe_id"]}')
    keys.adjust(1)
    return keys.as_markup()


async def remove_url(url_list: list):
    key = InlineKeyboardBuilder()
    for url in url_list:
        key.button(text=f'–£–¥–∞–ª–∏—Ç—å "{url["url_name"]}"', callback_data=f'remove_url_{url["link_id"]}')
    key.adjust(1)
    return key.as_markup()


category_choice = InlineKeyboardMarkup(inline_keyboard=[
    [InlineKeyboardButton(text='ü•ó –°–∞–ª–∞—Ç—ã', callback_data='salads')],
    [InlineKeyboardButton(text='üçñ –ú—è—Å–Ω—ã–µ –±–ª—é–¥–∞', callback_data='meat')],
    [InlineKeyboardButton(text='üç∞ –î–µ—Å–µ—Ä—Ç—ã', callback_data='desserts')]
])


async def recipe_action(category):
    keys = InlineKeyboardBuilder()
    keys.button(text='‚ûï –î–æ–±–∞–≤–∏—Ç—å —Ä–µ—Ü–µ–ø—Ç', callback_data=f'recipe_{category}_add')
    keys.button(text='üîé –ü–æ—Å–º–æ—Ç—Ä–µ—Ç—å —Ä–µ—Ü–µ–ø—Ç', callback_data=f'recipe_{category}_view')
    keys.button(text='üóë –£–¥–∞–ª–∏—Ç—å —Ä–µ—Ü–µ–ø—Ç', callback_data=f'recipe_{category}_remove')
    keys.adjust(1)
    return keys.as_markup()


async def show_recipe_list(recipe_list):
    keys = InlineKeyboardBuilder()
    for r in recipe_list:
        keys.button(text=r['recipe_name'], callback_data=f'show_{r["recipe_id"]}')
    keys.adjust(1)
    return keys.as_markup()


async def remove_recipe_list(recipe_list, category):
    keys = InlineKeyboardBuilder()
    for r in recipe_list:
        keys.button(text=r['recipe_name'], callback_data=f'delete_{r["recipe_id"]}_{category}')
    keys.adjust(1)
    return keys.as_markup()


cancel = ReplyKeyboardMarkup(keyboard=[
    [KeyboardButton(text='–û—Ç–º–µ–Ω–∞')]
], resize_keyboard=True)


skip = ReplyKeyboardMarkup(keyboard=[
    [KeyboardButton(text='–ü—Ä–æ–ø—É—Å—Ç–∏—Ç—å')],
    [KeyboardButton(text='–û—Ç–º–µ–Ω–∞')],
], resize_keyboard=True)


async def recipe_url(url):
    url_key = InlineKeyboardBuilder()
    url_key.button(text='–°–º–æ—Ç—Ä–µ—Ç—å –≤–∏–¥–µ–æ', url=f'{url}')
    url_key.adjust(1)
    return url_key.as_markup()
